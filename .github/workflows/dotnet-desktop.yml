name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  TerraformPlan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Terraform Init
        run: terraform -chdir=Terraform/main/ init -input=false
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Terraform Validate
        run: terraform -chdir=Terraform/main/ validate

      - name: Terraform Plan
        run: terraform -chdir=Terraform/main/ plan -input=false
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

  TerraformApply:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Terraform Init
        run: terraform -chdir=Terraform/main/ init -input=false
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Terraform Apply
        run: terraform -chdir=Terraform/main/ apply -auto-approve -input=false
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

  CI:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: Restore NuGet packages
        run: dotnet restore '**/*.csproj'

      - name: Build the application
        run: dotnet build '**/*.csproj' --configuration ${{ env.buildConfiguration }}

      - name: Run unit tests
        run: dotnet test '**/*Tests.csproj' --configuration ${{ env.buildConfiguration }} --collect:"XPlat Code Coverage"

      - name: Publish the application
        run: dotnet publish '**/*.csproj' --configuration ${{ env.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)/publish

      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: publish
          path: ${{ github.workspace }}/$(Build.ArtifactStagingDirectory)/publish
